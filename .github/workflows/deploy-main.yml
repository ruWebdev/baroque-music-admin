name: Deploy Laravel Project with Backup

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # --- Получаем код репозитория ---
    - name: Checkout repository
      uses: actions/checkout@v3

    # --- Настраиваем PHP ---
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, bcmath, pdo_mysql
        ini-values: post_max_size=256M, upload_max_filesize=256M

    # --- Устанавливаем зависимости PHP ---
    - name: Install Composer dependencies
      run: composer install --no-dev --optimize-autoloader

    # --- Настраиваем Node.js для Vite ---
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'

    # --- Устанавливаем зависимости Node ---
    - name: Install Node dependencies
      run: npm ci

    # --- Собираем фронтенд (Vite) ---
    - name: Build frontend (Vite)
      run: npm run build

    # --- Настраиваем SSH для деплоя ---
    - name: Start SSH agent
      uses: webfactory/ssh-agent@v0.7.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    # --- Деплой на сервер через rsync ---
    - name: Deploy files to server
      run: |
        rsync -avz --delete \
          -e "ssh -o StrictHostKeyChecking=no" \
          ./ ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }}:${{ secrets.PROJECT_PATH_MAIN }}

    # --- Опционально: можно запустить миграции и кеши через SSH ---
    - name: Run migrations and optimize on server
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
          cd ${{ secrets.PROJECT_PATH_MAIN }}
          php artisan migrate --force
          php artisan config:cache
          php artisan route:cache
          php artisan view:cache
          php artisan storage:link || true
EOF
